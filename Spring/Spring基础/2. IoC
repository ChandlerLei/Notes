1. IoC(Inversion of Control--控制反转)
(1) 概念
控制反转是一种思想。
即反转资源获取的方向。
之前的方向：对象A需要使用对象B，则会主动的new对象，然后初始化等--对象A主动获取资源。
现在的方向：对象A需要使用对象B，对象B的创建和初始化等操作交给了IoC容器，IoC容器将资源推给对象A--对象A被动接受资源。

(2) DI(Dependency Injection--依赖注入)
两者是对同一概念的不同描述。
DI更倾向于说明容器初始化对象的过程-组件接受(依赖)容器的资源注入。

(3) 配置文件
IoC容器如何知道哪些是它管理的对象呢？这就需要配置文件。
IoC容易通过读取配置文件中的配置元数据来进行管理对象。
一般使用xml文件进行配置元数据。也可以使用其他方式配置：注解、基于Java文件的属性文件等。

(4) Bean
我们把由IoC容器管理的对象称为Bean。
Bean就是由IoC容器管理，初始化，装配的对象。除此之外，和普通的Java对象一样。

(5) 好处
降低对象之间的耦合。


